@mixin video-dimensions($scale: 1) {
  width: 480px * $scale;
  height: 320px * $scale;
}

.component.video-player {
  // center the player verically and horizontally
  display: -webkit-box;
  -webkit-box-align: center;
  -webkit-box-pack: center;


  .fake-video {
    display: none;
  }

  .android & .fake-video,
  .ios & .fake-video {
    $inner-color: lighten($chrome-color, 75%);
    $mid-color: lighten($chrome-color, 65%);
    $outer-color: lighten($chrome-color, 50%);

    display: block;
    background-image: -webkit-gradient(
      radial,
      50% 50%, 0,
      50% 50%, 300,
      from($inner-color),
      color-stop(0.5, $mid-color),
      to($outer-color)
    );

    background-size: cover;

    .play-button {
      @include pullout;
      z-index: 1;
      background: url(resources/icons/btn-video-player.png) no-repeat center center;
    }
  }

  .ios &:not(.disabled) .fake-video {
    display: none;
  }
  
  
  // TODO: cleverer/more dynamic solution to resizing the
  //       video player based on container size
  .phone & {
    video,
    .fake-video {
      @media (orientation: portrait) {
        @include video-dimensions(.65);
      }

      @media (orientation: landscape) {
        @include video-dimensions(.4);
      }
    }
  }

  .tablet & {
    video,
    .fake-video {
      @media (orientation: portrait) {
        @include video-dimensions(1.2);
      }

      @media (orientation: landscape) {
        @include video-dimensions(.9);
      }
    }
  }
}

